{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapMutations } from 'vuex';\nimport store from \"@/store\";\nimport { JSEncrypt } from \"jsencrypt\";\nimport { Message } from \"element-ui\";\nexport default {\n  name: \"Login\",\n\n  data() {\n    return {\n      loginForm: {\n        staffId: \"jay\",\n        staffPswd: \"jay666\"\n      },\n      loading: false,\n      //rules内容与prop的内容相对应  提示\n      rules: {\n        staffId: [{\n          required: true,\n          message: '请输入用户名',\n          trigger: 'blur'\n        }],\n        staffPswd: [{\n          required: true,\n          message: '请输入密码',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n\n  methods: { ...mapMutations(['changeLogin']),\n\n    submitRegister() {\n      this.$router.push('/register');\n    },\n\n    submitLogin() {\n      // ref中的loginForm  输入满足要求(valid) => 发送给后端接口 => 后端验证后返回token => 前端根据后端递交内容进行页面展示\n      let encryptor = new JSEncrypt();\n      let publicKey = \"MFwwDQYJKoZIhvcNAQEBBQADSwAwSAJBAKuixQs2lsUfhayr1otJb/eR/wurxt+IlKEtA8aXCUtR5Bxh/LbJrHinyRpSGMfveYVKodVJmoATNKkTd86GcjMCAwEAAQ==\";\n      encryptor.setPublicKey(publicKey);\n      this.$refs.loginForm.validate(valid => {\n        if (valid) {\n          this.loading = true;\n          this.postRequest('/staff/login', {\n            \"staffId\": this.loginForm.staffId,\n            \"staffPswd\": encryptor.encrypt(this.loginForm.staffPswd) // \"staffId\":this.loginForm.staffId,\n            // \"staffPswd\":this.loginForm.staffPswd,\n\n          }).then(resp => {\n            if (resp.code === \"200\") {\n              // 提示登录成功\n              Message.success({\n                message: '登陆成功!'\n              });\n              this.loading = false; //存储用户token\n\n              const tokenStr = resp.token;\n              window.sessionStorage.setItem('tokenStr', tokenStr); //将token存储到vuex中\n\n              this.changeLogin({\n                Authorization: tokenStr\n              });\n              store.commit('editUserName', resp.data.staffName); //跳转首页\n\n              this.$router.replace('/home');\n            } else if (resp.code === \"-1\") {\n              this.loading = false;\n              Message.error({\n                message: resp.msg\n              });\n              this.loginForm.staffId = \"\";\n              this.loginForm.staffPswd = \"\";\n            }\n          });\n        } else {\n          this.$message.error('请输入所有字段!');\n          return false;\n        }\n      });\n    }\n\n  },\n\n  beforeRouteEnter(to, from, next) {\n    document.querySelector('body').setAttribute('style', 'margin:0;padding:0');\n    next();\n  }\n\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiCA;AACA;AACA;AACA;AACA;EACAA,aADA;;EAEAC;IACA;MACAC;QACAC,cADA;QAEAC;MAFA,CADA;MAKAC,cALA;MAMA;MACAC;QACAH,UACA;UAAAI;UAAAC;UAAAC;QAAA,CADA,CADA;QAIAL,YACA;UAAAG;UAAAC;UAAAC;QAAA,CADA;MAJA;IAPA;EAgBA,CAnBA;;EAoBAC,WACA,gCADA;;IAEAC;MACA;IACA,CAJA;;IAKAC;MACA;MACA;MACA;MACAC;MACA;QACA;UACA;UACA;YACA,iCADA;YAEA,wDAFA,CAGA;YACA;;UAJA,GAKAC,IALA,CAKAC;YACA;cACA;cACAC;gBAAAR;cAAA;cACA,qBAHA,CAIA;;cACA;cACAS,oDANA,CAOA;;cACA;gBAAAC;cAAA;cACAC,kDATA,CAUA;;cACA;YACA,CAZA,MAaA;cACA;cACAH;gBAAAR;cAAA;cACA;cACA;YACA;UACA,CAzBA;QA0BA,CA5BA,MA4BA;UACA;UACA;QACA;MACA,CAjCA;IAkCA;;EA5CA,CApBA;;EAkEAY;IACAC;IACAC;EACA;;AArEA","names":["name","data","loginForm","staffId","staffPswd","loading","rules","required","message","trigger","methods","submitRegister","submitLogin","encryptor","then","resp","Message","window","Authorization","store","beforeRouteEnter","document","next"],"sourceRoot":"src/views","sources":["Login.vue"],"sourcesContent":["<template>\r\n  <div class=\"loginPage\">\r\n    <div class=\"left\">\r\n      <div class=\"top\">\r\n        <div class=\"topLogo\">\r\n          <img src=\"../assets/img_1.png\" class=\"imageLogo\"/>\r\n        </div>\r\n        <div class=\"topName\">\r\n          科大国创项目管理系统\r\n        </div>\r\n      </div>\r\n      <div class=\"content\"></div>\r\n    </div>\r\n    <div class=\"right\">\r\n      <el-form :rules=\"rules\" ref=\"loginForm\" :model=\"loginForm\" class=\"loginContainer\"\r\n               v-loading=\"loading\"\r\n               element-loading-text=\"正在登录中...\">\r\n        <h3 class=\"loginTitle\">登&nbsp;&nbsp;陆</h3>\r\n        <el-form-item prop=\"staffId\">\r\n          <el-input auto-complete=\"false\" v-model=\"loginForm.staffId\" placeholder=\"请输入用户名\" clearable></el-input>\r\n        </el-form-item>\r\n        <el-form-item prop=\"staffPswd\">\r\n          <el-input auto-complete=\"false\" v-model=\"loginForm.staffPswd\" placeholder=\"请输入密码\" show-password></el-input>\r\n        </el-form-item>\r\n        <span class=\"font_account\">还没帐号?</span>\r\n        <el-link target=\"_blank\" @click=\"submitRegister\" class=\"registerButton\">立即注册</el-link>\r\n        <el-button type=\"primary\" style=\"width:100%\" @click=\"submitLogin\" class=\"loginButton\">登录</el-button>\r\n      </el-form>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapMutations } from 'vuex';\r\nimport store from \"@/store\";\r\nimport { JSEncrypt } from \"jsencrypt\";\r\nimport { Message } from \"element-ui\";\r\nexport default {\r\n  name: \"Login\",\r\n  data(){\r\n    return{\r\n      loginForm:{\r\n        staffId:\"jay\",\r\n        staffPswd:\"jay666\"\r\n      },\r\n      loading: false,\r\n      //rules内容与prop的内容相对应  提示\r\n      rules:{\r\n        staffId:[\r\n          {required:true,message:'请输入用户名',trigger:'blur'}\r\n        ],\r\n        staffPswd:[\r\n          {required:true,message:'请输入密码',trigger:'blur'}\r\n        ]\r\n      }\r\n    }\r\n  },\r\n  methods:{\r\n    ...mapMutations(['changeLogin']),\r\n    submitRegister(){\r\n      this.$router.push('/register');\r\n    },\r\n    submitLogin(){\r\n      // ref中的loginForm  输入满足要求(valid) => 发送给后端接口 => 后端验证后返回token => 前端根据后端递交内容进行页面展示\r\n      let encryptor = new JSEncrypt();\r\n      let publicKey = \"MFwwDQYJKoZIhvcNAQEBBQADSwAwSAJBAKuixQs2lsUfhayr1otJb/eR/wurxt+IlKEtA8aXCUtR5Bxh/LbJrHinyRpSGMfveYVKodVJmoATNKkTd86GcjMCAwEAAQ==\";\r\n      encryptor.setPublicKey(publicKey);\r\n      this.$refs.loginForm.validate((valid) => {\r\n        if (valid) {\r\n          this.loading = true;\r\n          this.postRequest('/staff/login',{\r\n            \"staffId\":this.loginForm.staffId,\r\n            \"staffPswd\":encryptor.encrypt(this.loginForm.staffPswd)\r\n            // \"staffId\":this.loginForm.staffId,\r\n            // \"staffPswd\":this.loginForm.staffPswd,\r\n          }).then(resp=>{\r\n            if(resp.code === \"200\"){\r\n              // 提示登录成功\r\n              Message.success({message: '登陆成功!'});\r\n              this.loading = false;\r\n              //存储用户token\r\n              const tokenStr = resp.token;\r\n              window.sessionStorage.setItem('tokenStr',tokenStr);\r\n              //将token存储到vuex中\r\n              this.changeLogin({Authorization : tokenStr});\r\n              store.commit('editUserName', resp.data.staffName);\r\n              //跳转首页\r\n              this.$router.replace('/home');\r\n            }\r\n            else if(resp.code === \"-1\"){\r\n              this.loading = false;\r\n              Message.error({message: resp.msg});\r\n              this.loginForm.staffId=\"\";\r\n              this.loginForm.staffPswd=\"\";\r\n            }\r\n          })\r\n        } else {\r\n          this.$message.error('请输入所有字段!');\r\n          return false;\r\n        }\r\n      });\r\n    },\r\n  },\r\n  beforeRouteEnter (to, from, next) {\r\n    document.querySelector('body').setAttribute('style', 'margin:0;padding:0')\r\n    next()\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.loginPage{\r\n  background-color: #ffffff;\r\n  height: 100%;\r\n  position: fixed;\r\n  width: 100%;\r\n  border:none;\r\n}\r\n.left{\r\n  float: left;\r\n  width:55%;\r\n  height:100%;\r\n}\r\n.right{\r\n  float: left;\r\n  width:45%;\r\n  height:100%;\r\n}\r\n.topLogo{\r\n  float:left;\r\n}\r\n.imageLogo{\r\n  height:40px;\r\n  width:110px;\r\n}\r\n.topName{\r\n  float: left;\r\n  font-weight: bold;\r\n  height: 20px;\r\n  width: 300px;\r\n  margin: 8px 5px 15px 30px;\r\n}\r\n.content{\r\n  margin-top:40px;\r\n  background-image: url(\"../assets/background.png\");\r\n  background-size: 100% 100%;\r\n  height: 95%;\r\n  width: 55%;\r\n  position: fixed;\r\n}\r\n.loginContainer{\r\n  border-radius: 15px;\r\n  background-clip: padding-box;\r\n  margin: 200px 140px;\r\n  width: 350px;\r\n  height: 350px;\r\n  padding: 15px 35px 25px 35px;\r\n  background: #fff;\r\n  border: 1px solid #eaeaea;\r\n  box-shadow: 0 0 25px #cac6c6;\r\n}\r\n.loginTitle{\r\n  margin: 20px auto 45px auto;\r\n  text-align: center;\r\n  font-weight: bold;\r\n  font-size: 26px;\r\n}\r\n/deep/.el-form-item{\r\n  margin-bottom:30px;\r\n}\r\n.registerButton{\r\n  margin-top: -3px;\r\n  margin-left: 10px;\r\n  font-weight: bold;\r\n}\r\n.font_account{\r\n  color: #606266;\r\n  font-size: 14px;\r\n  font-weight: 500;\r\n}\r\n.loginButton{\r\n  margin-top:23px;\r\n  margin-left: 0px;\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}